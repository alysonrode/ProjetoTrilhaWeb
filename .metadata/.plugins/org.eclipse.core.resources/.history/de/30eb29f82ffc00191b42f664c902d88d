package br.coldigogeladeiras.rest;

import java.util.List;
import java.util.ArrayList;
import java.sql.Connection;

import br.coldigogeladeiras.modelo.Marca;
import br.coldigogeladeiras.bd.Conexao;
import br.coldigogeladeiras.jdbc.JDBCMarcaDAO;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

//o path é quando você precisa que se referencie a classe abaixo pela url, sempre que acionada o "marca" na url, ela será executada
@Path("marca")
public class MarcaRest extends UtilRest {
	@GET
	@Path("/buscar")
	@Produces(MediaType.APPLICATION_JSON)
	public Response buscar() {
		try {
			// COLOCA UMA LISTA DE MARCAS COMO ATRIBUTO DA CLASS.
			List<Marca> listaMarcas = new ArrayList<Marca>();
			// CRIA UM OBJETO CONEC DA CLASSE CONEXÃO
			Conexao conec = new Conexao();
			// executa o método para abrir conexão
			Connection conexao = conec.abrirConexao();
			// cria um objeto da jdbcMarcaDAO
			JDBCMarcaDAO jdbcMarca = new JDBCMarcaDAO(conexao);
			// faz uma busca nas marcas do banco de dados
			listaMarcas = jdbcMarca.buscar();
			// fecha conexão com o banco
			conec.fecharConexao();
			// cria resposta em json e retorna ela
			return this.buildResponse(listaMarcas);
		} catch (Exception e) {
			e.printStackTrace();
			return this.buildErrorResponse(e.getMessage());
		}
	}
	@POST
	@Path("/inserir")
	@Consumes("application/*")
	public Response inserir(@QueryParam("marca") String marca) {
		System.out.println(marca);
		Conexao conec = new Conexao();
		Connection conexao = conec.abrirConexao();
		JDBCMarcaDAO jdbcMarca = new JDBCMarcaDAO(conexao);
		boolean retorno = jdbcMarca.inserir(marca);
		if(retorno) {
			return this.buildResponse("Marca cadastrada com sucesso");
		}else {
			return this.buildErrorResponse("Erro ao cadastrar marca!");
		}
	}
}
